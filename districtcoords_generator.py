# district_coords_generator.py
# Dev script: generates district_coords.py with lat/lon for all 77 Nepali districts.

import os
import json
from geopy.geocoders import Nominatim
from time import sleep

# List of all 77 Nepal districts
DISTRICTS = [
    # Koshi (14)
    "Taplejung","Panchthar","Ilam","Jhapa","Morang","Sunsari","Dhankuta",
    "Sankhuwasabha","Solukhumbu","Okhaldhunga","Khotang","Bhojpur",
    "Terhathum","Udayapur",
    # Madhesh (8)
    "Sarlahi","Rautahat","Bara","Parsa","Mahottari","Dhanusha","Siraha","Saptari",
    # Bagmati (13)
    "Kathmandu","Lalitpur","Bhaktapur","Kavrepalanchok","Dhading",
    "Sindhupalchok","Sindhuli","Ramechhap","Dolakha","Nuwakot",
    "Chitwan","Makwanpur","Rasuwa",
    # Gandaki (11)
    "Baglung","Gorkha","Kaski","Lamjung","Manang","Mustang","Myagdi",
    "Nawalpur","Parbat","Syangja","Tanahun",
    # Lumbini (12)
    "Arghakhanchi","Banke","Bardiya","Dang","Gulmi","Kapilvastu",
    "Parasi","Palpa","Pyuthan","Rupandehi","Rolpa","Eastern Rukum",
    # Karnali (10)
    "Dailekh","Dolpa","Humla","Jajarkot","Jumla","Kalikot","Mugu",
    "Salyan","Surkhet","Western Rukum",
    # Sudurpashchim (9)
    "Achham","Bajhang","Bajura","Baitadi","Dadeldhura","Darchula",
    "Doti","Kailali","Kanchanpur"
]

# Output file (will be overwritten)
OUTPUT_FILE = os.path.join(os.path.dirname(__file__), "district_coords.py")

def fetch_coords():
    geolocator = Nominatim(user_agent="nepal_district_locator")
    coords = {}
    for district in DISTRICTS:
        try:
            location = geolocator.geocode(f"{district} District, Nepal", timeout=10)
            if location:
                coords[district] = (round(location.latitude, 6), round(location.longitude, 6))
            else:
                coords[district] = (None, None)
        except Exception as e:
            print(f"⚠️ Error fetching {district}: {e}")
            coords[district] = (None, None)
        sleep(1)  # be polite to the service
    return coords

def write_district_coords(coords_map):
    with open(OUTPUT_FILE, "w", encoding="utf-8") as f:
        f.write("# district_coords.py\n")
        f.write("# Auto-generated by district_coords_generator.py\n\n")
        f.write("DISTRICT_COORDS = {\n")
        for name, (lat, lon) in coords_map.items():
            f.write(f'    "{name}": ({lat}, {lon}),\n')
        f.write("}\n\n")
        f.write("""\
def get_coords(district_name):
    \"\"\"
    Return (lat, lon) for given district.
    Defaults to Kathmandu if not found.
    \"\"\"
    return DISTRICT_COORDS.get(district_name, DISTRICT_COORDS.get("Kathmandu"))
""")

if __name__ == "__main__":
    print("Generating coordinates for 77 districts of Nepal...")
    coords_map = fetch_coords()
    print(f"Writing output to {OUTPUT_FILE}")
    write_district_coords(coords_map)
    print("Done! Copy-paste district_coords.py into your backend module.")